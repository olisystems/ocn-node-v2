spring.application.name=ocn-node

# spring JPA
spring.jpa.open-in-view = false
spring.devtools.add-properties = false

# default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

# OCN Node
ocn.node.dev = true
ocn.node.signatures = ${OCN_NODE_ENABLE_SIGNING:true}
ocn.node.url = ${OCN_NODE_URL:}
ocn.node.apikey = ${OCN_NODE_ADMIN_KEY:}
ocn.node.apiPrefix: ${OCN_NODE_API:ocn-v2}

# OCN Hashing as a Service
ocn.haas.enabled = ${OCN_NODE_HAAS_ON:true}
ocn.haas.url = ${OCN_NODE_HAAS_URL:}

# OCN Registry
ocn.registry.indexer.url = ${OCN_REGISTRY_INDEXER_TOKEN:}
ocn.registry.indexer.token = ${OCN_REGISTRY_INDEXER_TOKEN:}
ocn.node.privatekey = ${OCN_NODE_PRIVATE_KEY:}

# database
spring.datasource.url=${OCN_NODE_POSTGRES_DATABASE:}
spring.datasource.username=${OCN_NODE_POSTGRES_USER:}
spring.datasource.password=${OCN_NODE_POSTGRES_PASSWORD:}

# migrates on startup
spring.jpa.hibernate.ddl-auto=update

# disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# http request handling
server.error.include-stacktrace = never

# logging
logging.level.web = ${OCN_WEB_LOGGING_LEVEL:TRACE}


