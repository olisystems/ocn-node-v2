server.port=9998

# spring JPA
spring.jpa.open-in-view = false
#spring.jpa.hibernate.ddl-auto=update

# http request handling
server.error.include-stacktrace = never

# logging
logging.level.web = TRACE

# OCN Node
ocn.node.dev = true
ocn.node.signatures = false
ocn.node.url = http://localhost:9999
ocn.node.apikey = randomkey
ocn.node.apiPrefix: ocn-v2
ocn.node.privatekey = 9df16a85d24a0dab6fb2bc5c57e1068ed47d56d7518e9b0eaf1712cae718ded6

# OCN Hashing as a Service
ocn.hass.enabled = ${OCN_HAAS_ENABLED:true}
ocn.haas.url = ${OCN_HAAS_URL:http://localhost:9092/haas}

# OCN Registry
ocn.registry.indexer.url = ${OCN_REGISTRY_INDEXER_TOKEN:https://gateway.thegraph.com/api/subgraphs/id/BTcuNBXNc9kjjNUkCkUGstrGoJGZPsztS6zobMp1Ftmd}
ocn.registry.indexer.token = ${OCN_REGISTRY_INDEXER_TOKEN:86dce84a7856a293366ebab0b10f3bd0}

# default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

# database
spring.datasource.url=jdbc:postgresql://localhost:5432/ocn_node
spring.datasource.username=postgres
spring.datasource.password=minikube

# migrates on startup
spring.jpa.hibernate.ddl-auto=update


# disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect