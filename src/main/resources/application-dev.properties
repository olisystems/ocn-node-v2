server.address=${SERVER_HOST:localhost}
server.port=${SERVER_PORT:8080}

# spring JPA
spring.jpa.open-in-view = false
#spring.jpa.hibernate.ddl-auto=update

# http request handling
server.error.include-stacktrace = never

# logging
logging.level.web = DEBUG

# OCN Node
ocn.node.dev = true
ocn.node.signatures = ${OCN_NODE_ENABLE_SIGNING:false}
ocn.node.url = ${OCN_NODE_URL:http://localhost:9999}
ocn.node.apikey = ${OCN_NODE_ADMIN_KEY:randomkey}
ocn.node.web3.provider = ${OCN_NODE_WEB3_PROVIDER:}
ocn.node.web3.contracts.ocnRegistry = ${OCN_REGISTRY_CONTRACT_ADDRESS:}
ocn.node.apiPrefix: ${OCN_NODE_API:ocn-v2}
ocn.node.haasOn =  ${OCN_NODE_HAAS_ON:false}
ocn.node.haasUrl = ${OCN_NODE_HAAS_URL:}

# OCN Registry
ocn.node.registryIndexerUrl = https://gateway.thegraph.com/api/subgraphs/id/6cQY2p5PYJYrWMK64aQtK6GYoqqcHABnA8MuBYTma8WT 
ocn.node.registryIndexerToken = 86dce84a7856a293366ebab0b10f3bd0
ocn.node.privatekey = ${OCN_NODE_PRIVATE_KEY:}

# database
spring.datasource.url=${OCN_NODE_POSTGRES_DATABASE:jdbc:postgresql://postgres:5432/ocn_node}
spring.datasource.username=${OCN_NODE_POSTGRES_USER:postgres}
spring.datasource.password=${OCN_NODE_POSTGRES_PASSWORD:ocn_node_postgres_pwd}

# default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

# migrates on startup
spring.jpa.hibernate.ddl-auto=update

# disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect