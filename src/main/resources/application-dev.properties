server.address=${SERVER_HOST:localhost}
server.port=${SERVER_PORT:8080}

# spring JPA
spring.jpa.open-in-view = false
#spring.jpa.hibernate.ddl-auto=update

# http request handling
server.error.include-stacktrace = never

# logging
logging.level.web = DEBUG

# OCN Node
ocn.node.dev = true
ocn.node.signatures = ${OCN_NODE_ENABLE_SIGNING:false}
ocn.node.url = ${OCN_NODE_URL:http://localhost:8080}
ocn.node.apiPrefix: ${OCN_NODE_API:ocn-v2}
ocn.node.apikey = ${OCN_NODE_ADMIN_KEY:randomkey}
ocn.node.privatekey = ${OCN_NODE_PRIVATE_KEY:108520b0ae1971f59c50f5804e13dc5174799db496d5b92a7670a73695b44379}

# OCN Hashing as a Service
ocn.hass.enabled = ${OCN_HAAS_ENABLED:true}
ocn.haas.url = ${OCN_HAAS_URL:https://banula-dev.oli-system.com/haas}

# OCN Registry
ocn.registry.indexer.url = ${OCN_REGISTRY_INDEXER_URL:https://gateway.thegraph.com/api/subgraphs/id/BTcuNBXNc9kjjNUkCkUGstrGoJGZPsztS6zobMp1Ftmd}
ocn.registry.indexer.token = ${OCN_REGISTRY_INDEXER_TOKEN:86dce84a7856a293366ebab0b10f3bd0}

# database
spring.datasource.url=${OCN_NODE_POSTGRES_DATABASE:jdbc:postgresql://localhost:5432/merkletreedb}
spring.datasource.username=${OCN_NODE_POSTGRES_USER:postgres}
spring.datasource.password=${OCN_NODE_POSTGRES_PASSWORD:merkletreedb}

# default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

# migrates on startup
spring.jpa.hibernate.ddl-auto=update

# disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled, you have to set the correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect